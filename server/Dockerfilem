# syntax = docker/dockerfile:1

#---BUILD STAGE---
# Adjust NODE_VERSION as desired
ARG NODE_VERSION=20.6.1
FROM node:${NODE_VERSION}-slim as build

LABEL launch_runtime="Node.js"

# Node.js app lives here
WORKDIR /app

# Set production environment
ENV NODE_ENV="development"

# Install node modules
COPY --link package-lock.json package.json ./

# Install all dependencies, including devDependencies
RUN npm ci

# Copy the TypeScript source code
COPY --link . .
# COPY tsconfig.json .

# Compile TypeScript to JavaScript
RUN npm run build

#---PRODUCTION STAGE---
# Adjust NODE_VERSION as desired
# ARG NODE_VERSION=20.6.1
FROM node:${NODE_VERSION}-slim as production

# Set production environment
ENV NODE_ENV="production"

# Throw-away build stage to reduce size of final image
FROM base as build

# Install packages needed to build node modules
RUN apt-get update -qq && \
    apt-get install -y build-essential pkg-config python-is-python3

# Install node modules
COPY --link package-lock.json package.json ./
RUN npm ci

# Copy application code
COPY --link . .

# Final stage for app image
FROM base

# Copy built application
COPY --from=build /app /app

# Expose the ports

EXPOSE 8080
EXPOSE 40000-49000/tcp
EXPOSE 40000-49000/udp

# Start the server by default, this can be overwritten at runtime
ENV PORT=8080
CMD [ "node", "dist/server.js" ]